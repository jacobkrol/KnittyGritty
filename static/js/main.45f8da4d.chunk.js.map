{"version":3,"sources":["components/global.js","components/themes.js","components/ResetIcon.js","components/App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","offWhite","basicTheme","darkGray","lightGray","white","themeDark","themeLight","Line","styled","path","Triangle","ResetIcon","width","height","viewBox","fill","xmlns","d","stroke-width","AppContainer","div","Header","BannerContainer","Banner","props","side","Button","size","App","useState","title","setTitle","titleDisplay","setTitleDisplay","stitchCount","setStitchCount","rowCount","setRowCount","saved","setSaved","useEffect","savedData","window","localStorage","getItem","JSON","parse","data","saveCounts","state","setItem","stringify","id","type","value","onFocus","onChange","evt","target","onBlur","length","substr","onClick","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45f8da4d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n      margin: 0;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n        sans-serif;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      background-color: ${({ theme }) => theme.offWhite};\r\n      font-size: 14px;\r\n    }\r\n`\r\n\r\nexport default GlobalStyles;","export const basicTheme = {\r\n    darkGray: \"#333\",\r\n    lightGray: \"#777\",\r\n    offWhite: \"#F3F3F3\",\r\n    white: \"#FFF\",\r\n    themeDark: \"#F95B69\",\r\n    themeLight: \"#FB7262\"\r\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Line = styled.path`\n    stroke: ${({ theme }) => theme.darkGray};\n    stroke-width: 10;\n`\n\nconst Triangle = styled.path`\n    fill: ${({ theme }) => theme.darkGray};\n`\n\nexport default function ResetIcon() {\n    return (\n        <svg width=\"127\" height=\"141\" viewBox=\"0 0 127 141\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <Line d=\"M59.5868 22.3456C87.6086 22.3456 108.164 43.6974 108.164 71.6973C108.164 99.6972 88.1085 122.197 59.5868 122.197C59.5868 122.197 47.1085 122.197 37.1086 117.198\" stroke-width=\"9\"/>\n            <Triangle d=\"M41.4333 23.4007L63.9333 42.8863L63.9333 3.91512L41.4333 23.4007Z\" />\n            <Line d=\"M34.6066 29.2405C7.10847 42.6975 -1.38971 86.6545 25.6085 109.697C25.6085 109.697 30.7064 114.541 39.4625 118.26\" stroke-width=\"9\"/>\n        </svg>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './global';\nimport { basicTheme } from './themes';\nimport { \n    AiOutlinePlusCircle,\n    AiOutlineMinusCircle\n} from 'react-icons/ai';\nimport { FiSave } from 'react-icons/fi';\nimport ResetIcon from './ResetIcon';\n\nconst AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n`\n\nconst Header = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    background: linear-gradient(90deg, #f88a71, #ff6271);\n    width: 100%;\n    padding: 1.5rem 0 7rem;\n\n    #title {\n        color: ${({ theme }) => theme.white};\n        font-size: 1.5rem;\n        margin: 0.5rem 0;\n        line-height: 1;\n        padding: 0;\n        background-color: transparent;\n        text-align: center;\n        font-family: inherit;\n        border: 0;\n    }\n    #title:focus {\n        outline: none;\n        border-bottom: 2px solid white;\n    }\n\n    #stitches {\n        color: ${({ theme }) => theme.white};\n        font-size: 5rem;\n        margin: 0.5rem 0;\n        line-height: 1;\n    }\n`\n\nconst BannerContainer = styled.div`\n    position: relative;\n    top: -7rem;\n    width: 100%;\n`\n\nconst Banner = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    margin: 1.5rem 0;\n    padding: 1rem;\n    width: calc(100% - 2rem);\n    border: 1px solid darkgray;\n    border-radius: ${props => props.side === \"left\" ? \"0 15px 15px 0\" : \"15px 0 0 15px\"};\n    margin-left: ${props => props.side === \"left\" ? 0 : \"2rem\"};\n    background-color: #FCFCFC;\n\n    & > * {\n        margin: 0 0.75rem;\n    }\n    p {\n        line-height: 1;\n        font-size: 2.5rem;\n        color: ${({ theme }) => theme.darkGray};\n    }\n    #save-text {\n        font-size: 1.5rem;\n    }\n    svg {\n        color: ${({ theme }) => theme.darkGray};\n    }\n    #stitch-plus {\n        margin-left: 0.25rem;\n        color: ${({ theme }) => theme.themeLight} !important;\n    }\n`\nconst Button = styled.div`\n    cursor: pointer;\n    & > svg {\n        height: ${props => props.size === \"small\" ? \"3rem\" : props.size === \"medium\" ? \"4rem\" : \"7rem\"};\n        width: auto;\n    }\n`\n\nexport default function App() {\n    const [title, setTitle] = useState(\"Project 1\");\n    const [titleDisplay, setTitleDisplay] = useState(title);\n    const [stitchCount, setStitchCount] = useState(0);\n    const [rowCount, setRowCount] = useState(0);\n    const [saved, setSaved] = useState(true);\n\n    useEffect(() => {\n        const savedData = window.localStorage.getItem(\"knittyGritty\");\n        if(savedData && typeof(JSON.parse(savedData)) === \"object\") {\n            const data = JSON.parse(savedData);\n            setStitchCount(data.stitchCount ?? 0);\n            setRowCount(data.rowCount ?? 0);\n            setTitle(data.title ?? \"Project 1\");\n            setTitleDisplay(data.titleDisplay ?? data.title);\n        }\n    }, []);\n\n    const verifyStitchReset = () => {\n        if(window.confirm(\"Are you sure you want to reset the stitch count?\")) {\n            setStitchCount(0);\n            setSaved(false);\n        }\n    };\n    const verifyRowReset = () => {\n        if(window.confirm(\"Are you sure you want to reset the row count?\")) {\n            setRowCount(0);\n            setSaved(false);\n        }\n    }\n\n    const titleOnBlur = (value) => {\n        if(value.length === 0) {\n            setTitle(\"\");\n            setTitleDisplay(\"...\");\n        } else if(value.length > 21) {\n            setTitle(value);\n            setTitleDisplay(value.substr(0,21) + \"...\");\n        }\n    }\n    const titleOnChange = (value) => {\n        setSaved(false);\n        setTitle(value);\n        setTitleDisplay(value);\n    }\n    const titleOnFocus = () => {\n        setTitleDisplay(title);\n    }\n\n    const saveCounts = () => {\n        const state = {\n            \"stitchCount\": stitchCount,\n            \"rowCount\": rowCount,\n            \"title\": title,\n            \"titleDisplay\": titleDisplay\n        };\n        window.localStorage.setItem(\"knittyGritty\", JSON.stringify(state));\n        setSaved(true);\n    }\n\n    return (\n        <ThemeProvider theme={basicTheme}>\n            <AppContainer>\n                <GlobalStyles />\n                <Header>\n                    <input \n                        id=\"title\"\n                        type=\"text\"\n                        value={titleDisplay}\n                        onFocus={() => titleOnFocus()}\n                        onChange={(evt) => titleOnChange(evt.target.value)}\n                        onBlur={(evt) => titleOnBlur(evt.target.value)}\n                    />\n                    <p id=\"stitches\">{stitchCount}</p>\n                </Header>\n                <BannerContainer>\n                    <Banner id=\"stitch-banner\" side=\"left\">\n                        <Button size=\"medium\" id=\"stitch-reset\" onClick={() => verifyStitchReset()}>\n                            <ResetIcon />\n                        </Button>\n                        <Button size=\"medium\" id=\"stitch-minus\" \n                            onClick={() => { \n                                setSaved(false);\n                                setStitchCount(stitchCount > 0 ? stitchCount - 1 : 0);\n                            }}>\n                            <AiOutlineMinusCircle />\n                        </Button>\n                        <Button size=\"large\" id=\"stitch-plus\" \n                            onClick={() => {\n                                setSaved(false);\n                                setStitchCount(stitchCount + 1);\n                            }}>\n                            <AiOutlinePlusCircle />\n                        </Button>\n                    </Banner>\n                    <Banner id=\"row-banner\" side=\"right\">\n                        <Button size=\"small\" id=\"row-reset\" onClick={() => verifyRowReset()}>\n                            <ResetIcon />\n                        </Button>\n                        <Button size=\"small\" id=\"row-minus\" \n                            onClick={() => {\n                                setSaved(false);\n                                setRowCount(rowCount > 0 ? rowCount - 1 : 0);\n                            }}>\n                            <AiOutlineMinusCircle />\n                        </Button>\n                        <Button size=\"small\" id=\"row-plus\"\n                            onClick={() => {\n                                setSaved(false);\n                                setRowCount(rowCount + 1);\n                            }}>\n                            <AiOutlinePlusCircle />\n                        </Button>\n                        <p id=\"rows\">{rowCount}</p>\n                    </Banner>\n                    <Banner id=\"save-banner\" side=\"right\" onClick={() => saveCounts()}>\n                        <Button size=\"small\" id=\"save\" onClick={() => saveCounts()}>\n                            <FiSave />\n                        </Button>\n                        <p id=\"save-text\">{saved ? \"Saved\" : \"Save Progress\"}</p>\n                    </Banner>\n                </BannerContainer>\n            </AppContainer>\n        </ThemeProvider>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}